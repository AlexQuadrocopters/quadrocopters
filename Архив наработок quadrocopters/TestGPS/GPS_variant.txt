
// GPS/GSM трекер.
#include <EEPROM.h>
#include <AltSoftSerial.h>
AltSoftSerial gpsSerial;
String currStr = "";//Строка содержит текущую строку, полученую от сим модуля.
String nomber_Phone = "";//Строка содержит номер телефона на который отправляються GPS координаты, далее Разрешенный номер.
String dat2 = "no data";//Текст строки отпровляеться если GPS координат ещё нет.
String dat;//Строка содержит GPS координаты.
String complete = "Changed nomber complete!";//Текст строки отпровляеться при смене Разрешенного номера.
char data;//Содержит символ полученый от сим модуля.
byte char_A = 40;
boolean gps = true;
int gps_on = A0;
void setup() 
{
  pinMode(gps_on, OUTPUT);
  pinMode(led2, OUTPUT);
  
  analogWrite(gps_on, 255);//
  delay(800);              // 
  analogWrite(gps_on, 0);  //Включение сим модуля.
  delay(5000);             //
  
  Serial.begin(19200);
  gpsSerial.begin(9600);
  
  for(byte i=0; i<12; i++)   //Чтение Разрешонного номера из EEPROM
    {
      data = EEPROM.read(i);
      nomber_Phone += data;
    }
  delay(100);
  Serial.println("AT");//Устанавливаем связь с сим модулем, для соглосования скорости передачи.
  delay(500);
  Serial.println("AT+CMGDA=\"DEL ALL\"");//Удаляем всё SMS которые могут содержаться на сим карте.
}

void loop()
{
  if(Serial.available()>0)
  {
    read_GSM();.
  }
  read_GPS();
}
//Функция данных полученых от сим модуля. 
void read_GSM()
{
  currStr = "";
  while(Serial.available()>0)
  { 
    data = Serial.read();
    delay(10);
    if ('\r' == data)
    {
      if(!currStr.compareTo("RING"))//Если текущая строка RING, значит едёт входящий звонок.
      {
        ring_GSM();    
      }
      else
      {
        if (currStr.startsWith("+CMT")) //Или если строка начинаеться c +CMT, значит пришло SMS
        {
          read_Message();
          Serial.println("AT+CMGDA=\"DEL ALL\"");//Удоляем всё SMS чтоб не накапливать их.
        }
      }
      currStr = "";
    }
    else if ('\n' != data)
    {
      currStr += data;
    }
  }  
}

//Функция обработки входящего звонка.
void ring_GSM()
{
  boolean ring = true;
  currStr = "";
  delay(10);
  while(ring)
  {
    data = Serial.read();
    if (data == '"')
    {
      data = Serial.read();
      while (data != '"')
      {
        currStr += data;
        data = Serial.read();
      }
      if (currStr == nomber_Phone)//Если номер совподает с номером в строке "nomber_Phone"
      {
        delay(1000);
        Serial.println("ATHO");// Тогда сбрасываем звонок
        delay(100);
        send_Message(&dat2);// И вызываем функци отправки SMS и передаём ей адрес строки содержащию GPS координаты. 
        return;
      }
      else //Если номер не совподает
      {
        Serial.println("ATHO");// Просто сбрасываем звонок.
        return;
      }
    }
  }
}
//Функция отправки SMS.
void send_Message(String *message) //Функция принимает адрес строки с текстом SMS.
{
  delay(500);
  Serial.print("AT + CMGS = \"");
  Serial.print(nomber_Phone);
  Serial.println('"');
  delay(500);
  Serial.println(*message);
  delay(500);
  Serial.print((char)26);
}
//Функция читает GPS координаты и преобразует в формат:
//N xx xx.xxxx - широта.
//E xx xx.xxxx - долгота.
//Time xx:xx:xx - время по гринвичу.
void read_GPS()
{
  gps = true;
  dat = "";
  while (gps)
  {
    if (gpsSerial.available()>0)
    {
      data = gpsSerial.read();
      if (data == 'L')
      {
        while (data != '\r')
        {
          dat += data;
          delay(2);
          data = gpsSerial.read();
        }
        gps = false;
        if (dat.indexOf('A') == char_A)
        {
          delay(5);
          dat2 = "N ";
          for(byte i=3; i<5; i++)
          {
            dat2 += dat.charAt(i);
          }
          dat2 += ' ';
          for(byte i=5; i<13; i++)
          {
            dat2 += dat.charAt(i);
          }
          dat2 += "\nE ";
          for(byte i=17; i<19; i++)
          {
            dat2 += dat.charAt(i);
          }
          dat2 += ' ';
          for(byte i=19; i<27; i++)
          {
            dat2 += dat.charAt(i);
          }
          delay(5);
          dat2 += "\nTime ";
          for(byte i=30; i<32; i++)
          {
            dat2 += dat.charAt(i);
          }
          dat2 += ':';
          for(byte i=32; i<34; i++)
          {
            dat2 += dat.charAt(i);
          }
          dat2 += ':';
          for(byte i=34; i<36; i++)
          {
            dat2 += dat.charAt(i);
          }
        }        
      }
    }
  }
}
//Функция чтения SMS.
void read_Message()
{
  currStr = "";
  while(Serial.available()>0)
  {
    data = Serial.read();
    if(data == '$')
    {
      while(data != '#')
      {
        data = Serial.read();
        currStr += data;
      }
      if(!currStr.compareTo("balans#"))//Запрос и отправка баланса сим карты
      {
        currStr = "";
        Serial.println("ATD#100#;");//USSD запрос баланса для beeline
        delay(5000);
        while(Serial.available()>0)
        {  
          data = Serial.read();
          if(data == '"')
          {
            data = Serial.read();
            while(data != 'B')
            {
              currStr += data;
              data = Serial.read();
            }
            send_Message(&currStr);
            return;
          }
        }
      }
      else if(!currStr.compareTo("callback#"))//Звонок на разрешонный номер.
      {
        Serial.print("ATD");
        delay(100);
        Serial.print(nomber_Phone);
        delay(100);
        Serial.println(";");
        return;
      }
      else if(!currStr.compareTo("ch.nomber#"))//Смена Разрешонного номера и сохранение его в EEPROM.
      {
        currStr = "";
        data = Serial.read();
        if(data == '+')
        {
          for(byte i = 0; i < 12; i++)
          {
            EEPROM.write(i, data);
            currStr += data;
            data = Serial.read();
          }
          nomber_Phone = currStr;//Сохранение нового Разрешонного номера.
          send_Message(&complete);//Отправка SMS потверждающая смену Разрешонного номера.
          return;
        }
      }
    }
  }
}